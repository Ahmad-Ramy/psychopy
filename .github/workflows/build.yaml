name: build

on:
  workflow_dispatch:  # manual
  schedule:
    - cron: '0 0 * * 5'
  pull_request:
    branches: [ release, dev ]

permissions:
  contents: read

jobs:

  build:

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        indygreg-release: ["20230507"]  # see https://github.com/indygreg/python-build-standalone/releases
        python-version: ["3.10.11"]

    steps:
    - uses: actions/checkout@master

    - name: Unpack portable Python distro
      run: |
        # e.g. https://github.com/indygreg/python-build-standalone/releases/download/20230507/cpython-3.10.11+20230507-aarch64-apple-darwin-pgo-full.tar.zst
        echo "Building on ${{ runner.os }}"
        if [ "${{ runner.os }}" == "Windows" ]
        then
          arch="x86_64-pc-windows-msvc-shared"
          shasum=sha256sum
        elif [ "${{ runner.os }}" == "Linux" ]
        then
          arch="x86_64-unknown-linux"
        elif [ "${{ runner.os }}" == "macOS" ]
        then
          arch="x86_64-apple-darwin"
        else
          echo "unknown OS ${{ runner.os }}"
        fi
        fname="cpython-${{ matrix.python-version }}+${{ matrix.indygreg-release }}-$arch-install_only.tar.gz"
        indygreg="https://github.com/indygreg/python-build-standalone/releases/download/${{ matrix.indygreg-release }}"
        url="$indygreg/$fname"
        echo $url
        # fetch the files
        curl --location "$url" -o python.tar.gz
        curl --location "$url.sha256" -o shafile
        ls -al
        # check checksum first
        python3 .github/workflows/checksum.py python.tar.gz shafile sha256
        # then unzip and move
        tar -xf python.tar.gz
        # move to our preferred path
        mv python py
        # clean up unecess files
        rm python.tar.gz shafile

    - name: Install dependencies
      working-directory: py
      run: |
        if [ "${{ runner.os }}" == "Windows" ]
        then
          alias pip='py/python -m pip'
        else
          alias pip='py/bin/python3 -m pip'
        fi
        pip install -U pip
        pip install -U wheel
        pip install git+https://github.com/psychopy/psychopy.git@dev --no-warn-script-location

    - name: Install plugins
      run:
        # install optional components
        pip install psychopy-sounddevice psychopy-pyo psychopy-legacy-mic psychopy-connect psychopy-crs psychopy-emotiv psychopy-gammasci psychopy-mri-emulator psychopy-visionscience
        pip install moviepy

    - name: Build binary (windows)
      if: runner.os == 'Windows'
      run:
        echo "...build binary on Windows here"

    - name: Build binary (MacOS)
      if: runner.os == 'Windows'
      run:
        echo "...build binary on MacOS here"

#    - name: Make binary build
#      run:
#        if [ "${{ runner.os }}" == "Windows" ]
#        then
#          alias pip='py/python -m pip'
#        else
#          alias pip='py/bin/python3 -m pip'
#        fi
#
#
#    - name: Upload builds with googleapi
#      env:
#          gdrive_key: ${{ secrets.MINDTRACE_KEY }}
#      if: ${{ env.gdrive_key != '' }}
#      run: |
#        # NB this is using python but after we build so won't include?
#        python3 -m pip install googleapi
#        python3 .github/workflows/gdrive.py ${{ secrets.NIGHTLY_KEY }} --folder_id=${{ secrets.NIGHTLY_FOLDER }} --filepath=dist --glob_pattern='**/*.msi' --suffix='date'
#        python3 .github/workflows/gdrive.py ${{ secrets.NIGHTLY_KEY }} --folder_id=${{ secrets.NIGHTLY_FOLDER }} --filepath=dist --glob_pattern='**/*.exe' --suffix='date'
#        python3 .github/workflows/gdrive.py ${{ secrets.NIGHTLY_KEY }} --folder_id=${{ secrets.NIGHTLY_FOLDER }} --filepath=dist --glob_pattern='**/*.nupkg' --suffix='date'
#        # python3 .github/workflows/gdrive.py ${{ secrets.NIGHTLY_KEY }} --folder_id=${{ secrets.NIGHTLY_FOLDER }} --filepath=dist --glob_pattern='**/*.zip' --suffix='date'
#        python3 .github/workflows/gdrive.py ${{ secrets.NIGHTLY_KEY }} --folder_id=${{ secrets.NIGHTLY_FOLDER }} --filepath=dist --glob_pattern='**/*.dmg' --suffix='date'
